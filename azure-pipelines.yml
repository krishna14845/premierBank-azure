# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- devlopment

stages:
  - stage: Build
    jobs:
      - job: BuildWebApp
        pool:
          vmImage: "windows-latest"
          name: Azure Pipelines
          demands: npm

        steps:
        - task: Npm@1
          displayName: 'npm install'
          inputs:
            
            verbose: false

        - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@5
          displayName: 'Prepare analysis on SonarQube'
          inputs:
            SonarQube: PremierBankPOC
            scannerMode: CLI
            configFile: 'angular-frontend/sonar-project.properties'
          enabled: false

        - task: Npm@1
          displayName: 'npm custom'
          inputs:
            command: custom
            workingDir: 'angular-frontend'
            verbose: false
            customCommand: 'run build-prod'

        - task: Npm@1
          displayName: 'npm test'
          inputs:
            command: custom
            workingDir: 'angular-frontend'
            verbose: false
            customCommand: test

        - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@5
          displayName: 'Run Code Analysis'
          enabled: false

        - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@5
          displayName: 'Publish Quality Gate Result'
          enabled: false

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            SourceFolder: 'angular-frontend\dist'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/OWASP'
          inputs:
            SourceFolder: 'angular-frontend/OWASP'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/OWASP'

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/terraform'
          inputs:
            SourceFolder: 'angular-frontend/terraform'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/terraform'

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/AzureTmplate'
          inputs:
            SourceFolder: 'angular-frontend/AzureTemplate'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/AzureTmplate'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'

  - stage: DeployDev
    jobs:
      - deployment: 
        pool:
          vmImage: "windows-latest"
          name: Azure Pipelines
        environment: 'FrontDev'
        strategy:
         runOnce:
           deploy:
            steps:
            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy Azure App Service'
              inputs:
                azureSubscription: 'SPNSubscription20e84'
                appType: 'webApp'
                WebAppName: 'web-app-front'
                packageForLinux: '$(System.DefaultWorkingDirectory)/_Premium_Bank_Node.js-dev-import/drop/angular-frontend'

  - stage: DeployArm
    variables:
         - group: 'YAML-Front-Arm'
    jobs:
      - deployment:
        pool:
          name: Azure Pipelines
        environment: 'Arm'
        strategy:
         runOnce:
           deploy:
             steps:
               - task: replacetokens@3
                 displayName: 'Replace tokens in azuredeploy.parameters.json'
                 inputs:
                    rootDirectory: '/home/vsts/work/1/drop/ARMTemplate'
                    targetFiles: 'azuredeploy.parameters.json'
                    tokenPrefix: '#'
                    tokenSuffix: '#'
                  
               - task: AzureResourceManagerTemplateDeployment@3
                 displayName: 'ARM Template deployment: Resource Group scope'
                 inputs:
                    azureResourceManagerConnection: SPNSubscription20e84
                    subscriptionId: 'fb5eefd5-9b03-48bd-a8c6-47ea6f020e84'
                    resourceGroupName: '$(arm_appBaseName)'
                    location: 'Central India'
                    csmFile: '/home/vsts/work/1/drop/ARMTemplate/azuredeploy.json'
                    csmParametersFile: '/home/vsts/work/1/drop/ARMTemplate/azuredeploy.parameters.json'
                  
               
                

               - task: AzureRmWebAppDeployment@4
                 displayName: 'Deploy Azure App Service'
                 inputs:
                    azureSubscription: 'SPNSubscription20e84'
                    appType: 'webApp'
                    WebAppName: '$(arm_appBaseName)'
                    packageForLinux: '/home/vsts/work/1/drop/springboot-backend/target'





